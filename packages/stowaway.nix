{ pkgs, lib, buildGoModule }:
pkgs.stdenv.mkDerivation (with pkgs; rec {
  pname = "stowaway";
  version = "2.2";

  nativeBuildInputs = [ makeWrapper gnumake go ];


  modRoot = "./"; # dir of go.mod

  goModules = if (vendorHash == null) then "" else
  (stdenv.mkDerivation {
    name = "${pname}-${version}-go-modules";

    nativeBuildInputs = nativeBuildInputs ++ [ go git cacert ];

    inherit src;
    inherit (go) GOOS GOARCH;

    impureEnvVars = lib.fetchers.proxyImpureEnvVars ++ [
      "GIT_PROXY_COMMAND"
      "SOCKS_SERVER"
      "GOPROXY"
    ];

    configurePhase = ''
      runHook preConfigure
      export GOCACHE=$TMPDIR/go-cache
      export GOPATH="$TMPDIR/go"
      cd "${modRoot}"
      runHook postConfigure
    '';

    buildPhase = (
      ''
        runHook preBuild

        if [ -d vendor ]; then
          rm -rf vendor
        fi

        go mod vendor

        mkdir -p vendor

        runHook postBuild
      ''
    );

    installPhase = ''
      runHook preInstall
      cp -r --reflink=auto vendor $out

      if ! [ "$(ls -A $out)" ]; then
        echo "vendor folder is empty, somethings wrong"
        exit 10
      fi

      runHook postInstall
    '';

    dontFixup = true;

    outputHashMode = "recursive";
    outputHash = vendorHash;
    # Handle empty vendorHash; avoid
    # error: empty hash requires explicit hash algorithm
    outputHashAlgo = if vendorHash == "" then "sha256" else null;
  });

  vendorHash = "sha256-yqLw6CWg3pKekQjeIY55FC0musyd5bQmtZWs4atZuLM=";

  inherit (go) GOOS GOARCH;
  GOFLAGS = "-mod=vendor";
  configurePhase = ''
    export GOCACHE=$TMPDIR/go-cache
    export GOPATH="$TMPDIR/go"
    export GOPROXY=off
    export GOSUMDB=off
    rm -rf vendor
    cp -r --reflink=auto ${goModules} vendor
  '';

  # Why are we building for all the platforms?
  # Because this is a hacking tool, user need to send one of the executables
  # to the target machine and run there.

  buildPhase = ''
    find . -type f -name '*.go' -exec dirname {} \; | grep -v 'vendor/' | sort --unique | xargs -n 1 go install
    make
  '';

  installPhase = ''
    runHook preInstall
    mkdir -p $out/bin
    cp -R release/stowaway_${GOOS}_${GOARCH}_admin $out/bin/stowaway_admin
    cp -R release/stowaway_${GOOS}_${GOARCH}_agent $out/bin/stowaway_agent
    chmod +x $out/bin/*
    runHook postInstall
  '';

  src = fetchFromGitHub {
    owner = "Marven11";
    repo = "Stowaway";
    rev = "f70edba22c3654bacf044b0f21e543ea775845a4";
    sha256 = "sha256-UQkO4KKFwyYO+mFZX9TvSN4N8c73I/pUPxNlABVmVGU=";
  };

})
