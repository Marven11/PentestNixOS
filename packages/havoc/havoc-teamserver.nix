{ pkgs, lib, buildGoModule }:

let
  gitRev = "2d016905caf315fd90ae08a56816d7f5c8585d0a";
  havocSrc = pkgs.fetchFromGitHub {
    owner = "Marven11";
    repo = "Havoc";
    rev = gitRev;
    fetchSubmodules = true;
    sha256 = "sha256-PFBcpRchQv9SKr8sNp6slPyv/6j++Bd2EvJmaHjnXFA=";
  };

in

pkgs.stdenv.mkDerivation (with pkgs; rec {
  pname = "havoc-teamserver";
  version = "0.6.0";

  nativeBuildInputs = [ makeWrapper gnumake go git ];

  modRoot = "./"; # dir of go.mod

  goModules = if (vendorHash == null) then "" else
  (stdenv.mkDerivation {
    name = "${pname}-${version}-go-modules";

    nativeBuildInputs = nativeBuildInputs ++ [ go git cacert ];

    inherit src;
    inherit (go) GOOS GOARCH;

    impureEnvVars = lib.fetchers.proxyImpureEnvVars ++ [
      "GIT_PROXY_COMMAND"
      "SOCKS_SERVER"
      "GOPROXY"
    ];

    configurePhase = ''
      runHook preConfigure
      export GOCACHE=$TMPDIR/go-cache
      export GOPATH="$TMPDIR/go"
      cd "${modRoot}"
      runHook postConfigure
    '';

    buildPhase = (
      ''
        runHook preBuild

        if [ -d vendor ]; then
          rm -rf vendor
        fi

        mkdir -p vendor

        go mod download
        go mod vendor

        runHook postBuild
      ''
    );

    installPhase = ''
      runHook preInstall
      cp -r --reflink=auto vendor $out

      if ! [ "$(ls -A $out)" ]; then
        echo "vendor folder is empty, somethings wrong"
        exit 10
      fi

      runHook postInstall
    '';

    dontFixup = true;

    outputHashMode = "recursive";
    outputHash = vendorHash;
    # Handle empty vendorHash; avoid
    # error: empty hash requires explicit hash algorithm
    outputHashAlgo = if vendorHash == "" then "sha256" else null;
  });

  vendorHash = "sha256-cWfWtgAC+Yr8AxLmj0RTzBV/ERUXFUUe3WJQq6yMuw0=";

  inherit (go) GOOS GOARCH;
  GOFLAGS = "-mod=vendor";
  configurePhase = ''
    export GOCACHE=$TMPDIR/go-cache
    export GOPATH="$TMPDIR/go"
    export GOPROXY=off
    export GOSUMDB=off
    rm -rf vendor
    cp -r --reflink=auto ${goModules} vendor
  '';

  buildPhase = ''
    GO111MODULE="on" go build -ldflags="-s -w -X cmd.VersionCommit=${gitRev}" -o ./havoc main.go
  '';

  installPhase = ''
    runHook preInstall
    mkdir -p $out/bin $out/share
    cp havoc $out/share/havoc
    cp ${./data} $out/share/data -r
    cat > $out/bin/Havoc-TeamServer << EOF
#!/usr/bin/env bash
DATA_DIR=~/.havoc-teamserver
WORK_DIR=\$(mktemp -d)
MERGED_DIR=\$(mktemp -d)
if [ ! -d \$DATA_DIR ]; then
  mkdir \$DATA_DIR/data -p
fi
echo please configure nasm path to ${nasm}/bin/nasm
echo and use absolute path for profile filepath
${fuse-overlayfs}/bin/fuse-overlayfs -o lowerdir=$out/share,upperdir=\$DATA_DIR,workdir=\$WORK_DIR \$MERGED_DIR
cd \$MERGED_DIR
$out/share/havoc \$@
EOF
    chmod +x $out/bin/Havoc-TeamServer
    runHook postInstall
  '';

  src = "${havocSrc}/teamserver";

})
