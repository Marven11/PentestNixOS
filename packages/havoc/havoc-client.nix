{ stdenv, lib, pkgs, qtbase, mkDerivation, wrapQtAppsHook }:
let
  havocSrc = pkgs.fetchFromGitHub {
    owner = "HavocFramework";
    repo = "Havoc";
    rev = "ea3646e055eb1612dcc956130fd632029dbf0b86";
    fetchSubmodules = true;
    sha256 = "sha256-chsSsFamWDRJ8MWn9OcRMdVLIoGmhK+N+VNBf4EhGOA=";
  };
  havocModulesSrc = pkgs.fetchFromGitHub {
    # https://github.com/HavocFramework/Modules
    owner = "HavocFramework";
    repo = "Modules";
    rev = "7a513a7da680c161abe46b65ffdcd2e3dc356246";
    sha256 = "sha256-3xOQYRbUIFAtHHOxz+R6sfnUb7FRhjxVmgzigScC4Ho=";
  };
in
mkDerivation (rec {
  pname = "havoc-client";
  version = "0.6";

  nativeBuildInputs =  with pkgs;  [ cmake wrapQtAppsHook makeWrapper ];

  buildInputs = with pkgs; [
    pkgs.qt5.full
    pkgs.libsForQt5.qt5.qtwebsockets
    pkgs.qtcreator
    git
    gcc
    cmake
    gnumake
    fontconfig
    libGLU
    gtest
    spdlog
    boost
    ncurses
    gdbm
    openssl
    readline
    libffi
    sqlite
    bzip2
    mesa
    python3
    nasm
    go
    xorg.libxcb
  ];

  preBuild = ''
    mkdir Build; cd Build; cmake ..; cd ..
  '';

  postBuild = with pkgs; ''
        mkdir $out/bin $out/libexec -p
        cp -r $src $out/client
        find $out/client -type d -exec chmod +rwx {} \;
        cp ../Havoc $out/libexec/havoc-client-unwrapped
        cp ${havocModulesSrc} $out/client/Modules -r
        cat > $out/bin/Havoc-Client << EOF
#!/usr/bin/env bash
DATA_DIR=~/.havoc-client
WORK_DIR=\$(mktemp -d)
MERGED_DIR=\$(mktemp -d)
if [ ! -d \$DATA_DIR ]; then
  mkdir \$DATA_DIR
  cp ${havocSrc}/data \$DATA_DIR -r
  chmod a+rw \$DATA_DIR/data -R
fi
echo \$MERGED_DIR
${fuse-overlayfs}/bin/fuse-overlayfs -o lowerdir=$out,upperdir=\$DATA_DIR,workdir=\$WORK_DIR \$MERGED_DIR
cd \$MERGED_DIR
echo $QT_PLUGIN_PATH $XDG_DATA_DIRS $XDG_CONFIG_DIRS
exec $out/libexec/havoc-client-unwrapped
EOF
        chmod a+x $out/bin/Havoc-Client
  '';

  dontInstall = true;
  # dontFixup = true;

  src = "${havocSrc}/client";
})
