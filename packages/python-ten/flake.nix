{
  description = "Poetry python application";

  inputs = {
    utils.url = "github:numtide/flake-utils";
    poetry2nix.url = "github:nix-community/poetry2nix";
  };

  outputs =
    { self
    , nixpkgs
    , utils
    , poetry2nix
    , ...
    }:
    utils.lib.eachDefaultSystem (system:
    let
      pkgs = import nixpkgs {
        inherit system;
        overlays = [
          poetry2nix.overlays.default
        ];
      };

      python = pkgs.python3;
      projectDir = pkgs.fetchFromGitHub {
        owner = "cfreal";
        repo = "ten";
        rev = "6b16f8d294604e463175678e1a504d39f277164f";
        sha256 = "sha256-VaOmyyx8QQKeW1D4X/dFzwNeZFpLxJlx7v2w+6JrBAY=";
      };
      overrides = pkgs.poetry2nix.overrides.withDefaults (final: prev: {
        # Python dependency overrides go here
      });
    in
    {
      packages.default = pkgs.poetry2nix.mkPoetryApplication {
        inherit python projectDir overrides;
        # Non-Python runtime dependencies go here
        propogatedBuildInputs = [ ];
        # WARNING: bring flake.nix with this file
        poetrylock = ./ten-poetry.lock;
      };

      devShell = pkgs.mkShell {
        buildInputs = [
          (pkgs.poetry2nix.mkPoetryEnv {
            inherit python projectDir overrides;
          })
          pkgs.poetry
        ];
      };
    });
}
